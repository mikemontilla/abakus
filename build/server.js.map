{"version":3,"sources":["../server/server.js"],"names":[],"mappings":"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","file":"server.js","sourcesContent":["import fs from 'fs'\nimport path from 'path'\nimport bodyParser from 'body-parser'\nimport express from 'express'\nimport React from 'react'\nimport {Provider} from 'react-redux'\nimport {renderToString} from 'react-dom/server'\nimport configureStore from './common/store/'\nimport AccountsManager from './common/containers/AccountsManager'\nimport jade from 'jade'\n\nconst abakus = express();\n\nconst USERS_FILE = path.join(__dirname, \"/../persistence/users.json\");\nconst MOVEMENTS_FILE = path.join(__dirname, \"/../persistence/movements.json\");\n\nabakus.set(\"port\", (process.env.OPENSHIFT_NODEJS_PORT || 8080));\nabakus.set(\"ip\", (process.env.OPENSHIFT_NODEJS_IP || \"127.0.0.1\"))\nabakus.use(\"/\", express.static(path.join(__dirname, \"../public\")));\nabakus.use(bodyParser.json());\nabakus.use(bodyParser.urlencoded({extended:true}));\nabakus.engine(\"jade\", jade.__express);\nabakus.set(\"view engine\", \"jade\");\n\nconst removeMovement = function(movements, removeId){\n\tif(!movements.length)\n\t\treturn;\n\tremoveId--;\n\tmovements.splice(removeId, 1);\n\twhile(removeId < movements.length){\n\t\tmovements[removeId].id--;\n\t\tremoveId++;\n\t}\n};\n\nconst getMovements = function(callback) {\n\tfs.readFile(MOVEMENTS_FILE, function(error, data){\n\t\tif(error)\n\t\t\treturn callback(error);\n\t\tconst movements = JSON.parse(data);\n\t\treturn callback(null, movements);\n\t});\n};\n\nabakus.get(\"/\", function(req, res){\n\tgetMovements(function(error, movements){\n\t\tif(error){\n\t\t\tconsole.error(error);\n\t\t\tprocess.exit(1);\n\t\t}\n\t\t//Computes initial state\n\t\tconst initialState = {\n\t\t\terror: null,\n\t\t\tfetching: false,\n\t\t\tmovements\n\t\t};\n\t\tconst store = configureStore(initialState);\n\t\tconst html = renderToString(\n\t\t\t<Provider store={store}>\n\t\t\t\t<AccountsManager />\n\t\t\t</Provider>\n\t\t);\n\t\tconst finalState = JSON.stringify(store.getState());\n\t\tres.render(\"index\", {html, finalState});\n\t});\n});\n\nabakus.get(\"/api/movements\", function(req, res){\n\tfs.readFile(MOVEMENTS_FILE, function(error, data){\n\t\tif(error){\n\t\t\tconsole.error(error);\n\t\t\tprocess.exit(1);\n\t\t}\n\n\t\tvar movements = JSON.parse(data);\n\t\tres.json(movements);\n\t});\n});\n\nabakus.post(\"/api/movements\", function(req, res){\n\n\tfs.readFile(MOVEMENTS_FILE, function(error, data){\n\n\t\tif(error){\n\t\t\tconsole.error(error);\n\t\t\tprocess.exit(1);\n\t\t}\n\n\t\tvar movements = JSON.parse(data);\n\n\t\tvar newMovement = {\n\t\t\tid: movements.length + 1,\n\t\t\tdate: req.body.date,\n\t\t\tdescription: req.body.description,\n\t\t\ttype: req.body.type,\n\t\t\tamount: parseInt(req.body.amount),\n\t\t\tcomment: req.body.comment\n\t\t};\n\n\t\tmovements.push(newMovement);\n\n\t\tfs.writeFile(MOVEMENTS_FILE, JSON.stringify(movements, null, 4), function(error){\n\t\t\tif(error){\n\t\t\t\tconsole.error(error);\n\t\t\t\tprocess.exit(1);\n\t\t\t}\n\t\t\tres.json(movements);\n\t\t});\n\t});\n});\n\nabakus.post(\"/api/movements/remove\", function(req, res){\n\n\tfs.readFile(MOVEMENTS_FILE, function(error, data){\n\n\t\tif(error){\n\t\t\tconsole.error(error);\n\t\t\tprocess.exit(1);\n\t\t}\n\n\t\tvar movements = JSON.parse(data);\n\t\tvar id = parseInt(req.body.id);\n\t\tremoveMovement(movements, id);\n\n\t\tfs.writeFile(MOVEMENTS_FILE, JSON.stringify(movements, null, 4), function(error){\n\t\t\tif(error){\n\t\t\t\tconsole.error(error);\n\t\t\t\tprocess.exit(1);\n\t\t\t}\n\t\t\tres.json(movements);\n\t\t});\n\t});\n});\n\nabakus.listen(abakus.get(\"port\"), abakus.get(\"ip\"), function(){\n\tconsole.log(\"Server started: \" + abakus.get(\"ip\") + \":\" + abakus.get(\"port\") + \"/\");\n});\n"]}