{"version":3,"sources":["../server/server.js"],"names":[],"mappings":"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","file":"server.js","sourcesContent":["import fs from 'fs'\nimport path from 'path'\nimport bodyParser from 'body-parser'\nimport express from 'express'\nimport cookieParser from 'cookie-parser'\nimport React from 'react'\nimport {Provider} from 'react-redux'\nimport {renderToString} from 'react-dom/server'\nimport {getMovements, saveMovement, deleteMovement} from './persistence/movements'\nimport {getBusiness, getSingleBusiness, saveBusiness} from './persistence/business'\nimport configureBusinessStore from './common/business/store/'\nimport configureMovementsStore from './common/movements/store/'\nimport AccountsManager from './common/movements/containers/AccountsManager'\nimport BusinessManager from './common/business/containers/BusinessManager'\n\nconst abakus = express();\n\nabakus.set(\"port\", (process.env.OPENSHIFT_NODEJS_PORT || 8080));\nabakus.set(\"ip\", (process.env.OPENSHIFT_NODEJS_IP || \"127.0.0.1\"))\nabakus.use(cookieParser());\nabakus.use(\"/\", express.static(path.join(__dirname, \"../public\")));\nabakus.use(bodyParser.json());\nabakus.use(bodyParser.urlencoded({extended:true}));\nabakus.set(\"views\", path.join(__dirname, \"/../views\"));\nabakus.set(\"view engine\", \"pug\");\n\nabakus.get(\"/business\", function(req, res){\n\n\t//Reseting cookie\n\tres.clearCookie(\"business_id\");\n\tres.clearCookie(\"business_name\")\n\n\tgetBusiness(function(error, business){\n\t\tif(error){\n\t\t\tconsole.error(error);\n\t\t\tprocess.exit(1);\n\t\t}\n\t\t//Computes initial state\n\t\tconst initialState = {\n\t\t\terror: null,\n\t\t\tbusiness\n\t\t};\n\t\tconst store = configureBusinessStore(initialState);\n\t\tconst html = renderToString(\n\t\t\t<Provider store={store}>\n\t\t\t\t<BusinessManager />\n\t\t\t</Provider>\n\t\t);\n\t\tconst finalState = JSON.stringify(store.getState());\n\t\tres.render(\"business\", {html, finalState});\n\t})\n});\n\nabakus.get(\"/movements/:id\", function(req, res){\n\n\tconst businessId = parseInt(req.params.id);\n\tgetSingleBusiness(businessId, function(error, business){\n\t\tif(error){\n\t\t\tconsole.error(error);\n\t\t\tprocess.exit(1);\n\t\t}\n\t\t//Cookie set to identify the business in other requests\n\t\tres.cookie(\"business_id\", business.id);\n\n\t\tgetMovements(business.id, function(error, movements){\n\t\t\tif(error){\n\t\t\t\tconsole.error(error);\n\t\t\t\tprocess.exit(1);\n\t\t\t}\n\t\t\t//Computes initial state\n\t\t\tconst initialState = {\n\t\t\t\terror: null,\n\t\t\t\tfetching: false,\n\t\t\t\tmovements: {\n\t\t\t\t\tpast: [],\n\t\t\t\t\tpresent: movements,\n\t\t\t\t\tfuture: []\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst store = configureMovementsStore(initialState);\n\t\t\tconst html = renderToString(\n\t\t\t\t<Provider store={store}>\n\t\t\t\t\t<AccountsManager businessName={business.name}/>\n\t\t\t\t</Provider>\n\t\t\t);\n\t\t\tconst finalState = JSON.stringify(store.getState());\n\t\t\tconst businessName = JSON.stringify(business.name);\n\t\t\tres.render(\"movements\", {html, finalState, businessName});\n\t\t});\n\t});\n});\n\nabakus.post(\"/api/movements\", function(req, res){\n\n\tconst businessId = parseInt(req.cookies.business_id);\n\tconst newMovement = {\n\t\tbusinessId,\n\t\tdate: req.body.date,\n\t\tdescription: req.body.description,\n\t\ttype: req.body.type,\n\t\tamount: parseInt(req.body.amount),\n\t\tcomment: req.body.comment\n\t};\n\n\tsaveMovement(newMovement, function(error, newMovementId){\n\t\tif(error){\n\t\t\tconsole.error(error);\n\t\t\tprocess.exit(1);\n\t\t}\n\t\tif(newMovementId){\n\t\t\tgetMovements(businessId, function(error, movements){\n\t\t\t\tif(error){\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\tprocess.exit(1);\n\t\t\t\t}\n\t\t\t\tres.json(movements);\n\t\t\t});\n\t\t}\n\t});\n});\n\nabakus.post(\"/api/business\", function(req, res){\n\n\tconst newBusiness = {\n\t\tdate: req.body.date,\n\t\tname: req.body.name\n\t};\n\n\tsaveBusiness(newBusiness, function(error, savedFlag) {\n\t\tif(error){\n\t\t\tconsole.error(error);\n\t\t\tprocess.exit(1);\n\t\t}\n\t\tif(savedFlag){\n\t\t\tgetBusiness(function(error, business){\n\t\t\t\tif(error){\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\tprocess.exit(1);\n\t\t\t\t}\n\t\t\t\tres.json(business);\n\t\t\t});\n\t\t}\n\t});\n});\n\nabakus.post(\"/api/movements/remove\", function(req, res){\n\n\tconst businessId = parseInt(req.cookies.business_id);\n\tconst id = parseInt(req.body.id);\n\tdeleteMovement(id, function(error, deletedFlag) {\n\t\tif(error){\n\t\t\tconsole.error(error);\n\t\t\tprocess.exit(1);\n\t\t}\n\t\tif(deletedFlag){\n\t\t\tgetMovements(businessId, function(error, movements){\n\t\t\t\tif(error){\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\tprocess.exit(1);\n\t\t\t\t}\n\t\t\t\tres.json(movements);\n\t\t\t});\n\t\t}\n\t});\n});\n\nabakus.listen(abakus.get(\"port\"), abakus.get(\"ip\"), function(){\n\tconsole.log(\"Server started: \" + abakus.get(\"ip\") + \":\" + abakus.get(\"port\") + \"/\");\n});\n"]}