{"version":3,"sources":["../../server/persistence/business.js"],"names":[],"mappings":";;;;;QAgBgB,W,GAAA,W;QAaA,iB,GAAA,iB;QAUA,Y,GAAA,Y;;AAvChB;;;;;;AAEA,SAAS,aAAT,CAAuB,QAAvB,EAAiC;AAC7B,WAAO;AACH,cAAM,SAAS,IADZ;AAEH,uBAAe,SAAS;AAFrB,KAAP;AAIH;;AAED,SAAS,eAAT,CAAyB,QAAzB,EAAmC;AAC/B,WAAO;AACH,YAAI,SAAS,SAAS,WAAlB,CADD;AAEH,cAAM,SAAS;AAFZ,KAAP;AAIH;;AAEM,SAAS,WAAT,CAAqB,QAArB,EAA+B;AAClC,QAAM,QAAQ,+BAAd;AACA,yBAAW,KAAX,CAAiB,KAAjB,EAAwB,UAAS,KAAT,EAAgB,IAAhB,EAAsB,KAAtB,EAA4B;AAChD,YAAG,KAAH,EACI,OAAO,SAAS,KAAT,CAAP;;AAEJ,YAAM,WAAW,KAAK,GAAL,CAAS,UAAS,QAAT,EAAkB;AACxC,mBAAO,gBAAgB,QAAhB,CAAP;AACH,SAFgB,CAAjB;AAGA,eAAO,SAAS,IAAT,EAAe,QAAf,CAAP;AACH,KARD;AASH;;AAEM,SAAS,iBAAT,CAA2B,EAA3B,EAA+B,QAA/B,EAAyC;AAC5C,QAAM,QAAQ,uDAAuD,EAArE;AACA,yBAAW,KAAX,CAAiB,KAAjB,EAAwB,UAAS,KAAT,EAAgB,IAAhB,EAAqB;AACzC,YAAG,KAAH,EACI,OAAO,SAAS,KAAT,CAAP;AACJ,YAAM,WAAW,gBAAgB,KAAK,CAAL,CAAhB,CAAjB;AACA,iBAAS,IAAT,EAAe,QAAf;AACH,KALD;AAMH;;AAEM,SAAS,YAAT,CAAsB,QAAtB,EAAgC,QAAhC,EAA0C;AAC7C,QAAM,QAAQ,mCAAd;AACA,QAAM,cAAc,cAAc,QAAd,CAApB;AACA,yBAAW,KAAX,CAAiB,KAAjB,EAAwB,WAAxB,EAAqC,UAAS,KAAT,EAAgB,MAAhB,EAAwB;AACzD,YAAG,KAAH,EACI,OAAO,SAAS,KAAT,CAAP;AACJ,eAAO,SAAS,IAAT,EAAe,OAAO,QAAtB,CAAP;AACH,KAJD;AAKH","file":"business.js","sourcesContent":["import connection from './connection'\n\nfunction mapToDatabase(business) {\n    return {\n        name: business.name,\n        creation_date: business.date\n    };\n}\n\nfunction mapFromDatabase(business) {\n    return {\n        id: parseInt(business.business_id),\n        name: business.name\n    };\n}\n\nexport function getBusiness(callback) {\n    const query = \"SELECT * FROM abakus.business\";\n    connection.query(query, function(error, rows, field){\n        if(error)\n            return callback(error);\n\n        const business = rows.map(function(business){\n            return mapFromDatabase(business);\n        });\n        return callback(null, business);\n    });\n}\n\nexport function getSingleBusiness(id, callback) {\n    const query = \"SELECT * FROM abakus.business WHERE business_id = \" + id;\n    connection.query(query, function(error, rows){\n        if(error)\n            return callback(error);\n        const business = mapFromDatabase(rows[0]);\n        callback(null, business);\n    });\n}\n\nexport function saveBusiness(business, callback) {\n    const query = \"INSERT INTO abakus.business SET ?\";\n    const newBusiness = mapToDatabase(business);\n    connection.query(query, newBusiness, function(error, result) {\n        if(error)\n            return callback(error);\n        return callback(null, result.insertId);\n    });\n}\n"]}