{"version":3,"sources":["../../../server/common/components/AccountsManager.js"],"names":[],"mappings":";;;;;;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAGA,IAAM,kBAAkB,gBAAM,WAAN,CAAkB;AAAA;;;AAEzC,YAAW;AACV,WAAS,iBAAU,MAAV,CAAiB,UADhB;AAEV,aAAW,iBAAU,OAAV,CAAkB,iBAAU,KAAV,CAAgB;AAC5C,OAAI,iBAAU,MAAV,CAAiB,UADuB;AAE5C,SAAM,iBAAU,UAAV,CAAqB,IAArB,EAA2B,UAFW;AAG5C,gBAAa,iBAAU,MAAV,CAAiB,UAHc;AAI5C,WAAQ,iBAAU,MAAV,CAAiB,UAJmB;AAK5C,SAAM,iBAAU,KAAV,CAAgB,CAAC,QAAD,EAAU,SAAV,CAAhB,EAAsC,UALA;AAM5C,YAAS,iBAAU,MAAV,CAAiB;AANkB,GAAhB,CAAlB,EAOP;AATM,EAF8B;;AAczC,iBAAgB,0BAAU;AACzB,MAAM,UAAU,EAAhB;AACA,UAAQ,OAAR,GAAkB,CAAlB;AACA,UAAQ,QAAR,GAAmB,CAAnB;AACA,OAAK,KAAL,CAAW,SAAX,CAAqB,OAArB,CAA6B,UAAS,QAAT,EAAkB;AAC9C,OAAG,SAAS,IAAT,KAAkB,QAArB,EACC,QAAQ,OAAR,IAAmB,SAAS,MAA5B,CADD,KAEK,IAAG,SAAS,IAAT,KAAkB,SAArB,EACJ,QAAQ,QAAR,IAAoB,SAAS,MAA7B;AACD,GALD;AAMA,SAAO,OAAP;AACA,EAzBwC;;AA2BzC,SAAQ,kBAAU;AAAA,eACY,KAAK,KADjB;AAAA,MACV,OADU,UACV,OADU;AAAA,MACD,SADC,UACD,SADC;;AAEjB,MAAM,UAAU,KAAK,cAAL,EAAhB;AACA,MAAM,cAAc,EAAE,YAAY,EAAd,CAApB;AACA,MAAM,gBAAgB,CAAC,CAAC,UAAU,MAAlC;;AAEA,SACC;AAAA;AAAA,KAAK,WAAU,gBAAf;AACC;AAAA;AAAA;AAAA;AAAA,IADD;AAEE,kBAAe;AAAA;AAAA,MAAI,IAAG,gBAAP;AAAyB;AAAzB,IAFjB;AAGE,oBAAiB,yDAAe,WAAW,SAA1B,GAHnB;AAIE,oBAAiB,0DAAgB,SAAS,QAAQ,OAAjC,EAA0C,UAAU,QAAQ,QAA5D,GAJnB;AAKC;AALD,GADD;AASA;AA1CwC,CAAlB,CAAxB;;kBA6Ce,e","file":"AccountsManager.js","sourcesContent":["import React from 'react'\nimport {PropTypes} from 'react'\nimport MovementsList from '../containers/MovementsList'\nimport BalanceDisplay from './BalanceDisplay'\nimport NewMovementForm from '../containers/NewMovementForm'\n\n\nconst AccountsManager = React.createClass({\n\n\tPropTypes: {\n\t\tmessage: PropTypes.string.isRequired,\n\t\tmovements: PropTypes.arrayOf(PropTypes.shape({\n\t\t\tid: PropTypes.number.isRequired,\n\t\t\tdate: PropTypes.instanceOf(Date).isRequired,\n\t\t\tdescription: PropTypes.string.isRequired,\n\t\t\tamount: PropTypes.number.isRequired,\n\t\t\ttype: PropTypes.oneOf(['income','outcome']).isRequired,\n\t\t\tcomment: PropTypes.string.isRequired\n\t\t})).isRequired\n\t},\n\n\tcomputeBalance: function(){\n\t\tconst balance = {};\n\t\tbalance.incomes = 0;\n\t\tbalance.outcomes = 0;\n\t\tthis.props.movements.forEach(function(movement){\n\t\t\tif(movement.type === \"income\")\n\t\t\t\tbalance.incomes += movement.amount;\n\t\t\telse if(movement.type === \"outcome\")\n\t\t\t\tbalance.outcomes += movement.amount;\n\t\t});\n\t\treturn balance;\n\t},\n\n\trender: function(){\n\t\tconst {message, movements} = this.props;\n\t\tconst balance = this.computeBalance();\n\t\tconst messageFlag = !(message === \"\");\n\t\tconst movementsFlag = !!movements.length;\n\n\t\treturn (\n\t\t\t<div className=\"accountManager\">\n\t\t\t\t<h1>Morion</h1>\n\t\t\t\t{messageFlag && <h3 id=\"managerMessage\">{message}</h3>}\n\t\t\t\t{movementsFlag && <MovementsList movements={movements} />}\n\t\t\t\t{movementsFlag && <BalanceDisplay incomes={balance.incomes} outcomes={balance.outcomes} />}\n\t\t\t\t<NewMovementForm  />\n\t\t\t</div>\n\t\t);\n\t}\n});\n\nexport default AccountsManager\n"]}